# Makefile.in generated by automake 1.16.1 from Makefile.am.
# examples/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/libgphoto2
pkgincludedir = $(includedir)/libgphoto2
pkglibdir = $(libdir)/libgphoto2
pkglibexecdir = $(libexecdir)/libgphoto2
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
EXTRA_PROGRAMS =
check_PROGRAMS =
TESTS =
noinst_PROGRAMS = sample-autodetect$(EXEEXT) \
	sample-multi-detect$(EXEEXT) lunkwill-canon-capture$(EXEEXT) \
	sample-owner$(EXEEXT) sample-photobooth$(EXEEXT) \
	sample-preview$(EXEEXT) sample-tether$(EXEEXT) \
	sample-afl$(EXEEXT) best-iso$(EXEEXT) sample-capture$(EXEEXT) \
	sample-trigger-capture$(EXEEXT) sample-justfocus$(EXEEXT)
subdir = examples
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/gphoto-m4/gp-byteorder.m4 \
	$(top_srcdir)/gphoto-m4/gp-camlibs.m4 \
	$(top_srcdir)/gphoto-m4/gp-check-doxygen.m4 \
	$(top_srcdir)/gphoto-m4/gp-check-library.m4 \
	$(top_srcdir)/gphoto-m4/gp-check-shell-environment.m4 \
	$(top_srcdir)/gphoto-m4/gp-config-msg.m4 \
	$(top_srcdir)/gphoto-m4/gp-documentation.m4 \
	$(top_srcdir)/gphoto-m4/gp-gettext-hack.m4 \
	$(top_srcdir)/gphoto-m4/gp-internal-docs.m4 \
	$(top_srcdir)/gphoto-m4/gp-libltdl.m4 \
	$(top_srcdir)/gphoto-m4/gp-packaging.m4 \
	$(top_srcdir)/gphoto-m4/gp-references.m4 \
	$(top_srcdir)/gphoto-m4/gp-stdint.m4 \
	$(top_srcdir)/gphoto-m4/gp-udev.m4 \
	$(top_srcdir)/gphoto-m4/gp-va-copy.m4 \
	$(top_srcdir)/auto-m4/gettext.m4 \
	$(top_srcdir)/auto-m4/iconv.m4 $(top_srcdir)/auto-m4/lib-ld.m4 \
	$(top_srcdir)/auto-m4/lib-link.m4 \
	$(top_srcdir)/auto-m4/lib-prefix.m4 \
	$(top_srcdir)/auto-m4/libtool.m4 \
	$(top_srcdir)/auto-m4/ltoptions.m4 \
	$(top_srcdir)/auto-m4/ltsugar.m4 \
	$(top_srcdir)/auto-m4/ltversion.m4 \
	$(top_srcdir)/auto-m4/lt~obsolete.m4 \
	$(top_srcdir)/auto-m4/nls.m4 $(top_srcdir)/auto-m4/po.m4 \
	$(top_srcdir)/auto-m4/progtest.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/auto-aux/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
PROGRAMS = $(noinst_PROGRAMS)
am_best_iso_OBJECTS = best-iso.$(OBJEXT)
best_iso_OBJECTS = $(am_best_iso_OBJECTS)
best_iso_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
best_iso_DEPENDENCIES = $(top_builddir)/libgphoto2/libgphoto2.la \
	$(top_builddir)/libgphoto2_port/libgphoto2_port/libgphoto2_port.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_lunkwill_canon_capture_OBJECTS = lunkwill-canon-capture.$(OBJEXT) \
	context.$(OBJEXT) config.$(OBJEXT)
lunkwill_canon_capture_OBJECTS = $(am_lunkwill_canon_capture_OBJECTS)
lunkwill_canon_capture_LDADD = $(LDADD)
lunkwill_canon_capture_DEPENDENCIES =  \
	$(top_builddir)/libgphoto2/libgphoto2.la \
	$(top_builddir)/libgphoto2_port/libgphoto2_port/libgphoto2_port.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_sample_afl_OBJECTS = sample-afl.$(OBJEXT) context.$(OBJEXT) \
	autodetect.$(OBJEXT)
sample_afl_OBJECTS = $(am_sample_afl_OBJECTS)
sample_afl_LDADD = $(LDADD)
sample_afl_DEPENDENCIES = $(top_builddir)/libgphoto2/libgphoto2.la \
	$(top_builddir)/libgphoto2_port/libgphoto2_port/libgphoto2_port.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_sample_autodetect_OBJECTS = sample-autodetect.$(OBJEXT) \
	context.$(OBJEXT) config.$(OBJEXT)
sample_autodetect_OBJECTS = $(am_sample_autodetect_OBJECTS)
sample_autodetect_LDADD = $(LDADD)
sample_autodetect_DEPENDENCIES =  \
	$(top_builddir)/libgphoto2/libgphoto2.la \
	$(top_builddir)/libgphoto2_port/libgphoto2_port/libgphoto2_port.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_sample_capture_OBJECTS = sample-capture.$(OBJEXT) context.$(OBJEXT) \
	config.$(OBJEXT) focus.$(OBJEXT)
sample_capture_OBJECTS = $(am_sample_capture_OBJECTS)
sample_capture_LDADD = $(LDADD)
sample_capture_DEPENDENCIES =  \
	$(top_builddir)/libgphoto2/libgphoto2.la \
	$(top_builddir)/libgphoto2_port/libgphoto2_port/libgphoto2_port.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_sample_justfocus_OBJECTS = sample-justfocus.$(OBJEXT) \
	context.$(OBJEXT) focus.$(OBJEXT)
sample_justfocus_OBJECTS = $(am_sample_justfocus_OBJECTS)
sample_justfocus_LDADD = $(LDADD)
sample_justfocus_DEPENDENCIES =  \
	$(top_builddir)/libgphoto2/libgphoto2.la \
	$(top_builddir)/libgphoto2_port/libgphoto2_port/libgphoto2_port.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_sample_multi_detect_OBJECTS = sample-multi-detect.$(OBJEXT) \
	autodetect.$(OBJEXT) context.$(OBJEXT) config.$(OBJEXT)
sample_multi_detect_OBJECTS = $(am_sample_multi_detect_OBJECTS)
sample_multi_detect_LDADD = $(LDADD)
sample_multi_detect_DEPENDENCIES =  \
	$(top_builddir)/libgphoto2/libgphoto2.la \
	$(top_builddir)/libgphoto2_port/libgphoto2_port/libgphoto2_port.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_sample_owner_OBJECTS = sample-owner.$(OBJEXT) context.$(OBJEXT) \
	config.$(OBJEXT)
sample_owner_OBJECTS = $(am_sample_owner_OBJECTS)
sample_owner_LDADD = $(LDADD)
sample_owner_DEPENDENCIES = $(top_builddir)/libgphoto2/libgphoto2.la \
	$(top_builddir)/libgphoto2_port/libgphoto2_port/libgphoto2_port.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_sample_photobooth_OBJECTS = sample-photobooth.$(OBJEXT) \
	context.$(OBJEXT) config.$(OBJEXT)
sample_photobooth_OBJECTS = $(am_sample_photobooth_OBJECTS)
sample_photobooth_LDADD = $(LDADD)
sample_photobooth_DEPENDENCIES =  \
	$(top_builddir)/libgphoto2/libgphoto2.la \
	$(top_builddir)/libgphoto2_port/libgphoto2_port/libgphoto2_port.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_sample_preview_OBJECTS = preview.$(OBJEXT) context.$(OBJEXT) \
	config.$(OBJEXT) focus.$(OBJEXT)
sample_preview_OBJECTS = $(am_sample_preview_OBJECTS)
sample_preview_LDADD = $(LDADD)
sample_preview_DEPENDENCIES =  \
	$(top_builddir)/libgphoto2/libgphoto2.la \
	$(top_builddir)/libgphoto2_port/libgphoto2_port/libgphoto2_port.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_sample_tether_OBJECTS = sample-tether.$(OBJEXT) context.$(OBJEXT) \
	config.$(OBJEXT)
sample_tether_OBJECTS = $(am_sample_tether_OBJECTS)
sample_tether_LDADD = $(LDADD)
sample_tether_DEPENDENCIES = $(top_builddir)/libgphoto2/libgphoto2.la \
	$(top_builddir)/libgphoto2_port/libgphoto2_port/libgphoto2_port.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_sample_trigger_capture_OBJECTS = sample-trigger-capture.$(OBJEXT) \
	context.$(OBJEXT) config.$(OBJEXT)
sample_trigger_capture_OBJECTS = $(am_sample_trigger_capture_OBJECTS)
sample_trigger_capture_LDADD = $(LDADD)
sample_trigger_capture_DEPENDENCIES =  \
	$(top_builddir)/libgphoto2/libgphoto2.la \
	$(top_builddir)/libgphoto2_port/libgphoto2_port/libgphoto2_port.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/auto-aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/autodetect.Po \
	./$(DEPDIR)/best-iso.Po ./$(DEPDIR)/config.Po \
	./$(DEPDIR)/context.Po ./$(DEPDIR)/focus.Po \
	./$(DEPDIR)/lunkwill-canon-capture.Po ./$(DEPDIR)/preview.Po \
	./$(DEPDIR)/sample-afl.Po ./$(DEPDIR)/sample-autodetect.Po \
	./$(DEPDIR)/sample-capture.Po ./$(DEPDIR)/sample-justfocus.Po \
	./$(DEPDIR)/sample-multi-detect.Po ./$(DEPDIR)/sample-owner.Po \
	./$(DEPDIR)/sample-photobooth.Po ./$(DEPDIR)/sample-tether.Po \
	./$(DEPDIR)/sample-trigger-capture.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(best_iso_SOURCES) $(lunkwill_canon_capture_SOURCES) \
	$(sample_afl_SOURCES) $(sample_autodetect_SOURCES) \
	$(sample_capture_SOURCES) $(sample_justfocus_SOURCES) \
	$(sample_multi_detect_SOURCES) $(sample_owner_SOURCES) \
	$(sample_photobooth_SOURCES) $(sample_preview_SOURCES) \
	$(sample_tether_SOURCES) $(sample_trigger_capture_SOURCES)
DIST_SOURCES = $(best_iso_SOURCES) $(lunkwill_canon_capture_SOURCES) \
	$(sample_afl_SOURCES) $(sample_autodetect_SOURCES) \
	$(sample_capture_SOURCES) $(sample_justfocus_SOURCES) \
	$(sample_multi_detect_SOURCES) $(sample_owner_SOURCES) \
	$(sample_photobooth_SOURCES) $(sample_preview_SOURCES) \
	$(sample_tether_SOURCES) $(sample_trigger_capture_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/auto-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/auto-aux/depcomp \
	$(top_srcdir)/auto-aux/mkinstalldirs \
	$(top_srcdir)/auto-aux/test-driver \
	$(top_srcdir)/installcheck.mk README
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/huawei/Desktop/CameraControl/ThirdParty/libgphoto2-2.5.20/auto-aux/missing aclocal-1.16
ALL_DEFAULT_CAMLIBS = adc65 agfa_cl20 aox ax203 barbie canon casio_qv clicksmart310 digigr8 digita dimera3500 directory enigma13 fuji gsmart300 hp215 iclick jamcam jd11 jl2005a jl2005c kodak_dc120 kodak_dc210 kodak_dc240 kodak_dc3200 kodak_ez200 konica konica_qm150 largan lg_gsm mars dimagev mustek panasonic_coolshot panasonic_l859 panasonic_dc1000 panasonic_dc1580 pccam300 pccam600 pentax polaroid_pdc320 polaroid_pdc640 polaroid_pdc700 ptp2 ricoh ricoh_g3 samsung sierra sipix_blink2 sipix_web2 smal sonix sony_dscf1 sony_dscf55 soundvision spca50x sq905 st2205 stv0674 stv0680 sx330z topfield toshiba_pdrm11 tp6801
ALL_DEFINED_CAMLIBS = adc65 agfa_cl20 aox ax203 barbie canon casio_qv clicksmart310 digigr8 digita dimera3500 directory enigma13 fuji gsmart300 hp215 iclick jamcam jd11 jl2005a jl2005c kodak_dc120 kodak_dc210 kodak_dc240 kodak_dc3200 kodak_ez200 konica konica_qm150 largan lg_gsm mars dimagev mustek panasonic_coolshot panasonic_l859 panasonic_dc1000 panasonic_dc1580 pccam300 pccam600 pentax polaroid_pdc320 polaroid_pdc640 polaroid_pdc700 ptp2 ricoh ricoh_g3 samsung sierra sipix_blink2 sipix_web2 smal sonix sony_dscf1 sony_dscf55 soundvision spca50x sq905 st2205 stv0674 stv0680 sx330z topfield toshiba_pdrm11 tp6801 sipix_blink template
AMTAR = $${TAR-tar}
AM_CFLAGS = 
AM_CPPFLAGS =  -D_GPHOTO2_INTERNAL_CODE -DLOCALEDIR=\"$(datadir)/locale\" -DCAMLIBS=\"$(camlibdir)\" -I$(top_srcdir) -I$(top_builddir) \
	-I$(top_srcdir)/libgphoto2_port -I$(top_srcdir)/libgphoto2 \
	-I$(top_builddir)/libgphoto2
AM_CXXFLAGS = 
AM_DEFAULT_VERBOSITY = 1
AM_LDFLAGS = 
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/huawei/Desktop/CameraControl/ThirdParty/libgphoto2-2.5.20/auto-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/huawei/Desktop/CameraControl/ThirdParty/libgphoto2-2.5.20/auto-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/huawei/Desktop/CameraControl/ThirdParty/libgphoto2-2.5.20/auto-aux/missing automake-1.16
AWK = mawk
BISON = 
BUILD_THESE_CAMLIBS =  adc65.la agfa_cl20.la aox.la ax203.la barbie.la canon.la casio_qv.la clicksmart310.la digigr8.la digita.la dimera3500.la directory.la enigma13.la fuji.la gsmart300.la hp215.la iclick.la jamcam.la jd11.la jl2005a.la jl2005c.la kodak_dc120.la kodak_dc210.la kodak_dc240.la kodak_dc3200.la kodak_ez200.la konica.la konica_qm150.la largan.la lg_gsm.la mars.la dimagev.la mustek.la panasonic_coolshot.la panasonic_l859.la panasonic_dc1000.la panasonic_dc1580.la pccam300.la pccam600.la pentax.la polaroid_pdc320.la polaroid_pdc640.la polaroid_pdc700.la ptp2.la ricoh.la ricoh_g3.la samsung.la sierra.la sipix_blink2.la sipix_web2.la smal.la sonix.la sony_dscf1.la sony_dscf55.la soundvision.la spca50x.la sq905.la st2205.la stv0674.la stv0680.la sx330z.la topfield.la toshiba_pdrm11.la tp6801.la
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -Wmissing-declarations -Wmissing-prototypes
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DOT = false
DOXYGEN = false
DOXYGEN_OUTPUT_DIR = doxygen-output
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FLEX = 
GETTEXT_PACKAGE = libgphoto2-6
GMSGFMT = /usr/bin/msgfmt
GREP = /bin/grep
GTKDOC = 
HAVE_DOT = NO
HTML_APIDOC_DIR = libgphoto2-api.html
HTML_APIDOC_INTERNALS_DIR = libgphoto2-internals.html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBEXIF_CFLAGS = 
LIBEXIF_CONFIG_PROG = 
LIBEXIF_LIBS = 
LIBGD_CFLAGS = 
LIBGD_CONFIG_PROG = 
LIBGD_LIBS = 
LIBGPHOTO2_AGE = 1
LIBGPHOTO2_CURRENT = 7
LIBGPHOTO2_CURRENT_MIN = 6
LIBGPHOTO2_REVISION = 0
LIBGPHOTO2_VERSION_INFO = 7:0:1
LIBICONV = 
LIBINTL = 
LIBJPEG = 
LIBLTDL = -lltdl
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBXML2_CFLAGS = 
LIBXML2_CONFIG_PROG = 
LIBXML2_LIBS = 
LIPO = 
LN_S = ln -s
LTDLINCL = 
LTLIBICONV = 
LTLIBINTL = 
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAIL_GPHOTO_DEVEL = <gphoto-devel@lists.sourceforge.net>
MAIL_GPHOTO_TRANSLATION = <gphoto-translation@lists.sourceforge.net>
MAIL_GPHOTO_USER = <gphoto-user@lists.sourceforge.net>
MAKEINFO = ${SHELL} /home/huawei/Desktop/CameraControl/ThirdParty/libgphoto2-2.5.20/auto-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = $(top_builddir)/auto-aux/mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
NO_UNUSED_CFLAGS = -Wno-unused
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libgphoto2
PACKAGE_BUGREPORT = gphoto-devel@lists.sourceforge.net
PACKAGE_NAME = libgphoto2 photo camera library
PACKAGE_STRING = libgphoto2 photo camera library 2.5.20
PACKAGE_TARNAME = libgphoto2
PACKAGE_URL = 
PACKAGE_VERSION = 2.5.20
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POSUB = po
RANLIB = ranlib
REQUIREMENTS_FOR_LIBEXIF = 
REQUIREMENTS_FOR_LIBGD = 
REQUIREMENTS_FOR_LIBXML2 = 
RPMBUILD = false
SED = sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
URL_DIGICAM_LIST = http://www.teaser.fr/~hfiguiere/linux/digicam.html
URL_GPHOTO_HOME = http://www.gphoto.org/
URL_GPHOTO_PROJECT = https://github.com/gphoto
URL_JPHOTO_HOME = http://jphoto.sourceforge.net/
URL_USB_MASSSTORAGE = http://www.linux-usb.org/USB-guide/x498.html
USE_NLS = yes
VERSION = 2.5.20
VERSIONMAPLDFLAGS = -Wl,--version-script=$(srcdir)/libgphoto2.ver
XGETTEXT = /usr/bin/xgettext
abs_builddir = /home/huawei/Desktop/CameraControl/ThirdParty/libgphoto2-2.5.20/examples
abs_srcdir = /home/huawei/Desktop/CameraControl/ThirdParty/libgphoto2-2.5.20/examples
abs_top_builddir = /home/huawei/Desktop/CameraControl/ThirdParty/libgphoto2-2.5.20
abs_top_srcdir = /home/huawei/Desktop/CameraControl/ThirdParty/libgphoto2-2.5.20
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
apidocdir = ${prefix}/share/doc/libgphoto2/html/api
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
camlibdir = ${libdir}/libgphoto2/2.5.20
camlibdocdir = ${docdir}/camlibs
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${prefix}/share/doc/libgphoto2
dvidir = ${docdir}
effective_target = x86_64-pc-linux-gnu
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
hotplugdocdir = ${prefix}/share/doc/libgphoto2/linux-hotplug
hotplugusermapdir = ${prefix}/share/doc/libgphoto2/linux-hotplug
htmldir = ${prefix}/share/doc/libgphoto2/html
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/huawei/Desktop/CameraControl/ThirdParty/libgphoto2-2.5.20/auto-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = $(datadir)/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgconfigdir = ${libdir}/pkgconfig
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  libgphoto2_port
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
udevscriptdir = ${libdir}/udev
utilsdir = ${libdir}/${PACKAGE_TARNAME}
EXTRA_DIST = README
check_SCRIPTS = 
INSTALL_TESTS = 

# Now that we build all the camlibs in one directory, we can run our checks
# with CAMLIBS set to the camlib build directory.
TESTS_ENVIRONMENT = env \
	CAMLIBS="$(top_builddir)/camlibs"


# After installation, this will be CAMLIBS = $(DESTDIR)$(camlibdir)
INSTALL_TESTS_ENVIRONMENT = env \
	CAMLIBS="$(DESTDIR)$(camlibdir)" \
	LD_LIBRARY_PATH="$(DESTDIR)$(libdir)$${LD_LIBRARY_PATH+:$${LD_LIBRARY_PATH}}"

CLEANFILES = $(check_SCRIPTS)
sample_afl_SOURCES = sample-afl.c samples.h context.c autodetect.c
sample_autodetect_SOURCES = sample-autodetect.c samples.h context.c config.c
sample_owner_SOURCES = sample-owner.c samples.h context.c config.c
sample_multi_detect_SOURCES = sample-multi-detect.c samples.h autodetect.c context.c config.c
lunkwill_canon_capture_SOURCES = lunkwill-canon-capture.c context.c samples.h config.c
sample_capture_SOURCES = sample-capture.c context.c samples.h config.c focus.c
sample_trigger_capture_SOURCES = sample-trigger-capture.c context.c samples.h config.c
sample_photobooth_SOURCES = sample-photobooth.c samples.h context.c config.c
sample_preview_SOURCES = preview.c samples.h context.c config.c focus.c
sample_tether_SOURCES = samples.h sample-tether.c context.c config.c
best_iso_SOURCES = best-iso.c
sample_justfocus_SOURCES = samples.h sample-justfocus.c context.c focus.c
LDADD = $(top_builddir)/libgphoto2/libgphoto2.la \
	$(top_builddir)/libgphoto2_port/libgphoto2_port/libgphoto2_port.la \
	$(LIBLTDL) \
	$(LIBEXIF_LIBS) \
	$(INTLLIBS)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/installcheck.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign examples/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign examples/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/installcheck.mk $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

best-iso$(EXEEXT): $(best_iso_OBJECTS) $(best_iso_DEPENDENCIES) $(EXTRA_best_iso_DEPENDENCIES) 
	@rm -f best-iso$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(best_iso_OBJECTS) $(best_iso_LDADD) $(LIBS)

lunkwill-canon-capture$(EXEEXT): $(lunkwill_canon_capture_OBJECTS) $(lunkwill_canon_capture_DEPENDENCIES) $(EXTRA_lunkwill_canon_capture_DEPENDENCIES) 
	@rm -f lunkwill-canon-capture$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lunkwill_canon_capture_OBJECTS) $(lunkwill_canon_capture_LDADD) $(LIBS)

sample-afl$(EXEEXT): $(sample_afl_OBJECTS) $(sample_afl_DEPENDENCIES) $(EXTRA_sample_afl_DEPENDENCIES) 
	@rm -f sample-afl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sample_afl_OBJECTS) $(sample_afl_LDADD) $(LIBS)

sample-autodetect$(EXEEXT): $(sample_autodetect_OBJECTS) $(sample_autodetect_DEPENDENCIES) $(EXTRA_sample_autodetect_DEPENDENCIES) 
	@rm -f sample-autodetect$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sample_autodetect_OBJECTS) $(sample_autodetect_LDADD) $(LIBS)

sample-capture$(EXEEXT): $(sample_capture_OBJECTS) $(sample_capture_DEPENDENCIES) $(EXTRA_sample_capture_DEPENDENCIES) 
	@rm -f sample-capture$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sample_capture_OBJECTS) $(sample_capture_LDADD) $(LIBS)

sample-justfocus$(EXEEXT): $(sample_justfocus_OBJECTS) $(sample_justfocus_DEPENDENCIES) $(EXTRA_sample_justfocus_DEPENDENCIES) 
	@rm -f sample-justfocus$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sample_justfocus_OBJECTS) $(sample_justfocus_LDADD) $(LIBS)

sample-multi-detect$(EXEEXT): $(sample_multi_detect_OBJECTS) $(sample_multi_detect_DEPENDENCIES) $(EXTRA_sample_multi_detect_DEPENDENCIES) 
	@rm -f sample-multi-detect$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sample_multi_detect_OBJECTS) $(sample_multi_detect_LDADD) $(LIBS)

sample-owner$(EXEEXT): $(sample_owner_OBJECTS) $(sample_owner_DEPENDENCIES) $(EXTRA_sample_owner_DEPENDENCIES) 
	@rm -f sample-owner$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sample_owner_OBJECTS) $(sample_owner_LDADD) $(LIBS)

sample-photobooth$(EXEEXT): $(sample_photobooth_OBJECTS) $(sample_photobooth_DEPENDENCIES) $(EXTRA_sample_photobooth_DEPENDENCIES) 
	@rm -f sample-photobooth$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sample_photobooth_OBJECTS) $(sample_photobooth_LDADD) $(LIBS)

sample-preview$(EXEEXT): $(sample_preview_OBJECTS) $(sample_preview_DEPENDENCIES) $(EXTRA_sample_preview_DEPENDENCIES) 
	@rm -f sample-preview$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sample_preview_OBJECTS) $(sample_preview_LDADD) $(LIBS)

sample-tether$(EXEEXT): $(sample_tether_OBJECTS) $(sample_tether_DEPENDENCIES) $(EXTRA_sample_tether_DEPENDENCIES) 
	@rm -f sample-tether$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sample_tether_OBJECTS) $(sample_tether_LDADD) $(LIBS)

sample-trigger-capture$(EXEEXT): $(sample_trigger_capture_OBJECTS) $(sample_trigger_capture_DEPENDENCIES) $(EXTRA_sample_trigger_capture_DEPENDENCIES) 
	@rm -f sample-trigger-capture$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sample_trigger_capture_OBJECTS) $(sample_trigger_capture_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/autodetect.Po # am--include-marker
include ./$(DEPDIR)/best-iso.Po # am--include-marker
include ./$(DEPDIR)/config.Po # am--include-marker
include ./$(DEPDIR)/context.Po # am--include-marker
include ./$(DEPDIR)/focus.Po # am--include-marker
include ./$(DEPDIR)/lunkwill-canon-capture.Po # am--include-marker
include ./$(DEPDIR)/preview.Po # am--include-marker
include ./$(DEPDIR)/sample-afl.Po # am--include-marker
include ./$(DEPDIR)/sample-autodetect.Po # am--include-marker
include ./$(DEPDIR)/sample-capture.Po # am--include-marker
include ./$(DEPDIR)/sample-justfocus.Po # am--include-marker
include ./$(DEPDIR)/sample-multi-detect.Po # am--include-marker
include ./$(DEPDIR)/sample-owner.Po # am--include-marker
include ./$(DEPDIR)/sample-photobooth.Po # am--include-marker
include ./$(DEPDIR)/sample-tether.Po # am--include-marker
include ./$(DEPDIR)/sample-trigger-capture.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS) $(check_SCRIPTS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS) $(check_SCRIPTS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/autodetect.Po
	-rm -f ./$(DEPDIR)/best-iso.Po
	-rm -f ./$(DEPDIR)/config.Po
	-rm -f ./$(DEPDIR)/context.Po
	-rm -f ./$(DEPDIR)/focus.Po
	-rm -f ./$(DEPDIR)/lunkwill-canon-capture.Po
	-rm -f ./$(DEPDIR)/preview.Po
	-rm -f ./$(DEPDIR)/sample-afl.Po
	-rm -f ./$(DEPDIR)/sample-autodetect.Po
	-rm -f ./$(DEPDIR)/sample-capture.Po
	-rm -f ./$(DEPDIR)/sample-justfocus.Po
	-rm -f ./$(DEPDIR)/sample-multi-detect.Po
	-rm -f ./$(DEPDIR)/sample-owner.Po
	-rm -f ./$(DEPDIR)/sample-photobooth.Po
	-rm -f ./$(DEPDIR)/sample-tether.Po
	-rm -f ./$(DEPDIR)/sample-trigger-capture.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am: installcheck-local

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/autodetect.Po
	-rm -f ./$(DEPDIR)/best-iso.Po
	-rm -f ./$(DEPDIR)/config.Po
	-rm -f ./$(DEPDIR)/context.Po
	-rm -f ./$(DEPDIR)/focus.Po
	-rm -f ./$(DEPDIR)/lunkwill-canon-capture.Po
	-rm -f ./$(DEPDIR)/preview.Po
	-rm -f ./$(DEPDIR)/sample-afl.Po
	-rm -f ./$(DEPDIR)/sample-autodetect.Po
	-rm -f ./$(DEPDIR)/sample-capture.Po
	-rm -f ./$(DEPDIR)/sample-justfocus.Po
	-rm -f ./$(DEPDIR)/sample-multi-detect.Po
	-rm -f ./$(DEPDIR)/sample-owner.Po
	-rm -f ./$(DEPDIR)/sample-photobooth.Po
	-rm -f ./$(DEPDIR)/sample-tether.Po
	-rm -f ./$(DEPDIR)/sample-trigger-capture.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installcheck-local \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am

.PRECIOUS: Makefile


# FIXME: Only run this if not cross-compiling
installcheck-local: $(INSTALL_TESTS) $(INSTALLCHECK_DEPS)
	@total=0; failed=0; success=0; ignored=0; \
	echo "Running \"installcheck\" test cases..."; \
	for script in $(INSTALL_TESTS); do \
		echo "Test case: $$script"; \
		total="$$(expr $$total + 1)"; \
		if test -f "./$$script"; then dir="./"; \
		elif test -f "$$script"; then dir=""; \
		else dir="$(srcdir)/"; fi; \
		if $(INSTALL_TESTS_ENVIRONMENT) "$$dir/$$script"; then \
			echo "SUCCEEDED: $$script"; \
			success="$$(expr $$success + 1)"; \
		else \
			s="$$?"; \
			if test "$$s" = "77"; then \
				echo "FAILURE IGNORED (return code $$s): $$script"; \
				ignored="$$(expr $$ignored + 1)"; \
			else \
				echo "FAILED (return code $$s): $$script"; \
				failed="$$(expr $$failed + 1)"; \
			fi; \
		fi; \
	done; \
	echo "Test summary: $$success succeeded, $$failed failed, $$ignored failures ignored, $$total tests in total."; \
	if test "$$failed" -gt 0; then \
		echo "Error: One or more \"installcheck\" testcases have failed."; \
		exit 1; \
	fi

#noinst_PROGRAMS += test-filesys
#test_filesys_SOURCE = test-filesys.c
#test_filesys_LDADD = \
#	$(top_builddir)/libgphoto2/libgphoto2.la \
#	$(top_builddir)/libgphoto2_port/libgphoto2_port/libgphoto2_port.la \
#	$(LIBLTDL) \
#	$(LIBEXIF_LIBS) \
#	$(INTLLIBS)

#TESTS += test-camera-list
#INSTALL_TESTS += test-camera-list
#check_PROGRAMS += test-camera-list
#test_camera_list_SOURCE = test-camera-list.c
#test_camera_list_LDADD = \
#	$(top_builddir)/libgphoto2/libgphoto2.la \
#	$(top_builddir)/libgphoto2_port/libgphoto2_port/libgphoto2_port.la \
#	$(LIBLTDL) \
#	$(LIBEXIF_LIBS) \
#	$(INTLLIBS)

#if HAVE_GCC
#PEDANTIC_CFLAGS = -std=c99 -pedantic-errors -W -Wall -Wextra -Werror
#PEDANTIC_CXXFLAGS = -std=c++98 -pedantic-errors -W -Wall -Wextra -Werror
#else
#PEDANTIC_CFLAGS = 
#PEDANTIC_CXXFLAGS = 
#endif
#
#TESTS += test-pedantic-c
#check_PROGRAMS += test-pedantic-c
#test_pedantic_c_SOURCES = test-pedantic-compilation.c
#test_pedantic_c_CPPFLAGS = \
#	$(AM_CPPFLAGS) $(CPPFLAGS) \
#	-U_GPHOTO2_INTERNAL_CODE
#test_pedantic_c_CFLAGS = \
#	$(AM_CFLAGS) $(PEDANTIC_CFLAGS) $(CFLAGS) \
#	-U_GPHOTO2_INTERNAL_CODE
#test_pedantic_c_LDADD = \
#	$(top_builddir)/libgphoto2/libgphoto2.la \
#	$(top_builddir)/libgphoto2_port/libgphoto2_port/libgphoto2_port.la \
#	$(LIBLTDL) \
#	$(LIBEXIF_LIBS) \
#	$(INTLLIBS)

#if HAVE_CXX
#check_PROGRAMS += test-pedantic-cxx
#TESTS += test-pedantic-cxx
#else
#EXTRA_PROGRAMS += test-pedantic-cxx
#endif
#test_pedantic_cxx_SOURCES = test-pedantic-compilation.cxx
#test_pedantic_cxx_CPPFLAGS = \
#	$(AM_CPPFLAGS) $(CPPFLAGS) \
#	-U_GPHOTO2_INTERNAL_CODE
#test_pedantic_cxx_CXXFLAGS = \
#	$(AM_CXXFLAGS) $(PEDANTIC_CXXFLAGS) $(CXXFLAGS) \
#	-U_GPHOTO2_INTERNAL_CODE
#test_pedantic_cxx_LDADD = \
#	$(top_builddir)/libgphoto2/libgphoto2.la \
#	$(top_builddir)/libgphoto2_port/libgphoto2_port/libgphoto2_port.la \
#	$(LIBLTDL) \
#	$(LIBEXIF_LIBS) \
#	$(INTLLIBS)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
